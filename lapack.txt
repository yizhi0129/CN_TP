lapack is keg-only, which means it was not symlinked into /usr/local,
because macOS provides LAPACK in Accelerate.framework.

For compilers to find lapack you may need to set:
  export LDFLAGS="-L/usr/local/opt/lapack/lib"
  export CPPFLAGS="-I/usr/local/opt/lapack/include"

For pkg-config to find lapack you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/lapack/lib/pkgconfig"



gcc -o your_program your_program.c -framework Accelerate

### docker path

etc/alternatives/
blas.pc-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/pkgconfig/blas-netlib.pc
cblas.h-x86_64-linux-gnu -> /usr/include/x86_64-linux-gnu/cblas-netlib.h
lapack.pc-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/pkgconfig/lapack-netlib.pc
libblas.a-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/blas/libblas.a
libblas.so-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/blas/libblas.so
libblas.so.3-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/blas/libblas.so.3
liblapack.a-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/lapack/liblapack.a
liblapack.so-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/lapack/liblapack.so
liblapack.so.3-x86_64-linux-gnu -> /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3








